@page "/AddressBook/{AN8}"
@inherits BlazorStateComponent
@inject JsService JsService

<div class="container mt-5">
    @if (AppState.AddressBook == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <form @onsubmit="@Save">
            <div class="form-group row">
                <label for="at1" class="col form-label">@AB.z_AT1_36.title</label>
                <div class="col">
                    <input id="at1" class="form-control" readonly @bind-value="@AB.z_AT1_36.value" />
                </div>
            </div>
            <div class="form-group row">
                <label for="an8" class="col form-label">@AB.z_AN8_21.title</label>
                <div class="col">
                    <input id="an8" class="form-control" readonly @bind-value="@AB.z_AN8_21.value" />
                </div>
            </div>
            <div class="form-group row">
                <label for="alph" class="col form-label">@AB.z_ALPH_28.title</label>
                <div class="col">
                    <input id="alph" class="form-control" disabled="@IsReadOnly" @bind="@AB.z_ALPH_28.value" />
                </div>
            </div>
            <div class="form-group row">
                <label for="add1" class="col form-label">@AB.z_ADD1_40.title</label>
                <div class="col">
                    <input id="add1" class="form-control" disabled="@IsReadOnly" @bind="@AB.z_ADD1_40.value" />
                </div>
            </div>
            <div class="form-group row">
                <label for="add2" class="col form-label">@AB.z_ADD2_42.title</label>
                <div class="col">
                    <input id="add2" class="form-control" disabled="@IsReadOnly" @bind="@AB.z_ADD2_42.value" />
                </div>
            </div>
            <div class="row justify-content-center">
                <div class="col-auto">
                    <button type="submit" class="btn btn-primary" disabled="@IsReadOnly">Save</button>
                </div>
                <div class="col-auto">
                    <button type="button" class="btn btn-warning" disabled="@IsReadOnly" @onclick="@Cancel">Cancel</button>
                </div>
            </div>
        </form>
    }
    <div class="fixed-bottom p-4 overflow-auto">
        <menu></menu>
    </div>
</div>

@code {

    [Parameter]
    public string AN8 { get; set; }
    protected AppState AppState => GetState<AppState>();
    protected bool IsReadOnly => !AppState.EditMode;
    protected Data.W01012A.Form AB => AppState.AddressBook;
    protected void StateChanged(object sender, EventArgs e) => StateHasChanged();
    protected void Save()
    {
        Mediator.Send(new AddressBookAction { AN8 = AB.z_AN8_21.value.ToString(), RowAction = RowAction.Save });
    }
    protected void Cancel()
    {
        Mediator.Send(new EditModeAction { EditMode = false });
    }
    protected override void OnInitialized()
    {
        Mediator.Send(new AddressBookAction { AN8 = AN8 });
        AppState.StateChanged += StateChanged;
    }
    async protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JsService.InitMenu("menu", new string[] { "Back", "Edit" });
        }
    }

}
